/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <0 11>;
        };

        OpenParenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        OpenBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <18 19>;
        };

        OpenBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
        };

        CloseParenthasis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 7>;
        };

        CloseBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <19 20>;
        };

        CloseBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 32>;
        };

        LessThan {
            bindings = <&kp LESS_THAN>;
            key-positions = <3 4>;
        };

        GreatherThan {
            bindings = <&kp GREATER_THAN>;
            key-positions = <4 5>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTR |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   | ./, | '/" |  /* | EQU |
            //                    | GUI | LWR | SPC |   | SPC | L2   | L1  |

            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp F     &kp P  &kp B        &kp J      &kp L  &kp U         &kp Y    &kp SEMI  &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp R  &kp S     &kp T  &kp G        &kp M      &kp N  &kp E         &kp I    &kp O     &kp APOS
&kp LCTRL       &kp Z  &kp X  &kp C     &kp D  &kp V        &kp K      &kp H  &kp COMMA     &kp DOT  &kp FSLH  &kp TAB
                              &kp LGUI  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | SYSR |     |     |     |     |     |   |     |  1  |  2  |  3  |  0  |      |
            // |      |     |     | UP  |     |     |   |     |  4  |  5  |  6  |     |      |
            // |      |     | LFT | DWN | RGT |     |   |     |  7  |  8  |  9  |     |      |
            //                    |     |     | SPC |   | SPC |     |     |

            bindings = <
&trans  &trans  &trans    &trans    &trans     &trans    &kp PLUS   &kp N7        &kp N8        &kp N9        &kp ASTRK      &trans
&trans  &trans  &trans    &kp UP    &trans     &trans    &kp MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_DIVIDE  &trans
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans    &kp N0     &kp N1        &kp N2        &kp N3        &kp EQUAL      &trans
                          &trans    &trans     &trans    &trans     &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  &  |  %  |   |  ^  |  $  |  *  |  (  |  )  | BSPC |
            // | CTRL |MUTE |V_UP |V_DWN|  <  |  >  |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | SPC |     | ALT |

            bindings = <
&kp TAB    &kp EXCL    &kp AT             &kp HASH         &kp AMPERSAND  &kp PRCNT           &kp CARET  &kp DOLLAR  &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp LESS_THAN  &kp GREATER_THAN    &kp MINUS  &kp EQUAL   &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans      &trans             &trans           &trans         &trans              &kp UNDER  &kp PLUS    &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                          &kp LGUI         &trans         &kp SPACE           &kp SPACE  &trans      &kp RALT
            >;
        };
    };
};

//For new Layers
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
